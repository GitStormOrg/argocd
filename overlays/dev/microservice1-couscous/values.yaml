ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-staging
  hosts:
    - host: couscous.spreadit.ovh
      paths:
        - path: /
  tls:
    - hosts:
        - couscous.spreadit.ovh
      secretName: couscous-tls-secret
certificate:
  enabled: true
  # Nom du Certificate (par défaut, on peut utiliser le nom du chart)
  name: microservice1-spreadit.ovh
  # Secret dans lequel le certificat et la clé privée seront stockés
  secretName: couscous-tls-secret
  # Référence à l'Issuer ou ClusterIssuer dans votre cluster
  issuerRef:
    name: letsencrypt-staging
    kind: ClusterIssuer
  # Liste des noms DNS pour lesquels le certificat doit être émis
  dnsNames:
    - couscous.spreadit.ovh
replicaCount: 1
serviceAccount:
  create: true # If true, a dedicated Kubernetes service account will be created for the pod
  name: couscous-sa # You can override the name here (empty = auto-generated from chart name)
image:
  repository: letijeur/mon-site
  pullPolicy: IfNotPresent
  tag: "couscous-ecfb8514"
service:
  type: ClusterIP
  port: 3000
vault:
  enabled: true # Enable Vault Agent sidecar injection
  role: couscous # Vault role associated with the application
  secretPath: secrets/data/postgres # Path in Vault where the API_KEY is stored
# Define the imagePullSecrets as a list (it can be empty if not used)
imagePullSecrets:
  - name: letijeur-registry-secret
